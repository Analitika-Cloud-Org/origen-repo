name: Mirror to Bitbucket
on:
  push:
    branches:
      - main
      - desa
      - cert
      - feature/*
      - hotfix/*
  workflow_dispatch:

jobs:
  mirror-to-bitbucket:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup repository
        run: |
          # Configurar identidad global
          git config --global user.name "Acloud DevOps"
          git config --global user.email "Acloud.DevOps@analitika.cloud"
          
          # Crear archivo de exclusión
          mkdir -p .git/info
          echo ".github/workflows/" > .git/info/exclude

      - name: Push to Bitbucket
        env:
          BITBUCKET_USERNAME: ${{ secrets.BITBUCKET_USERNAME }}
          BITBUCKET_APP_PASSWORD: ${{ secrets.BITBUCKET_APP_PASSWORD }}
          BITBUCKET_REPO: analitikacloud/destino-repo
        run: |
          echo "Configurando remote de Bitbucket..."
          git remote add bitbucket https://$BITBUCKET_USERNAME:$BITBUCKET_APP_PASSWORD@bitbucket.org/$BITBUCKET_REPO.git
          
          # Función para pushear una rama excluyendo workflows
          push_branch() {
            local branch=$1
            local target=$2
            echo "Procesando rama $branch -> $target"
            
            # Checkout de la rama
            git checkout -b "temp_${branch}" $branch
            
            # Excluir workflows sin crear un nuevo commit
            git rm -r --cached .github/workflows/ >/dev/null 2>&1 || true
            
            # Push con la identidad correcta
            GIT_COMMITTER_NAME="Acloud DevOps" \
            GIT_COMMITTER_EMAIL="Acloud.DevOps@analitika.cloud" \
            GIT_AUTHOR_NAME="Acloud DevOps" \
            GIT_AUTHOR_EMAIL="Acloud.DevOps@analitika.cloud" \
            git push -f bitbucket "temp_${branch}:${target}"
            
            # Limpiar rama temporal
            git checkout $branch
            git branch -D "temp_${branch}"
          }
          
          # Procesar cada rama
          echo "Sincronizando ramas principales..."
          for branch in main desa cert; do
            git show-ref --verify --quiet refs/heads/$branch && push_branch $branch $branch
          done
          
          # Procesar ramas feature y hotfix
          echo "Sincronizando ramas feature y hotfix..."
          git branch -r | grep 'origin/feature/' | sed 's#origin/##' | while read branch; do
            push_branch $branch $branch
          done
          
          git branch -r | grep 'origin/hotfix/' | sed 's#origin/##' | while read branch; do
            push_branch $branch $branch
          done
          
          echo "Sincronizando tags..."
          git push bitbucket --tags --force
          
          if [ $? -eq 0 ]; then
            echo "✅ Sincronización completada exitosamente"
          else
            echo "❌ Error en la sincronización"
            exit 1
          fi